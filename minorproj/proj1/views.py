from django.shortcuts import render
from django.shortcuts import *
from django.contrib import messages
import bcrypt
import pickle
from .forms import CreateUserForm
from django.views.generic import TemplateView
from sklearn.feature_extraction.text import *
from sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer

from django.contrib.auth.forms import UserCreationForm

#e = "hi"


def home(request):  # homepage
    return render(request, 'home.html')


def intro(request):  # intro page
    return render(request, 'intro.html')
    # return render(request, 'intro,html')


def method(request):  # method page
    return render(request, 'method.html')


def result(request):  # EDA page
    return render(request, 'result.html')


def register(request):
    form = CreateUserForm()
    if request.method == 'POST':
        form = CreateUserForm(request.POST)
        if form.is_valid():
            form.save()
            user = form.cleaned_data.get('username')
            messages.success(request, 'Account was created for ' + user)

            return redirect('login')

    context = {'form': form}
    return render(request, 'registration/register.html', context)


# def register(request):
#    form = CreateUserForm
#    if request.method == 'POST':
#        regForm = CreateUserForm(request.POST)
#        if regForm.is_valid():
#            regForm.save()
#            messages.success(request, "User Registered Successfully")
#    return render(request,'registration/register.html', {'form': form})

def second(request):  # ACTUAL result page
    return render(request, 'second.html')


def user(request):
    if request.method == 'GET':
        des = request.GET.get("des","")
        with open('C:\\Users\\Sanjana\\Downloads\\vulnerability_model.sav', "rb") as f:
            count_vect, model = pickle.load(f)
            res = model.predict(count_vect.transform([des]))
            res = str(res)
            res = res[2:-2]
            res = str(res)
            res = res.split("\' \'")
            if des == "":
                res = ""
        return render(request, 'user.html', {"res": res})
    return render(request,'user.html')

def nullval(request):
    return render(request, 'nullval.html')


def co(request):
    return render(request, 'co.html')